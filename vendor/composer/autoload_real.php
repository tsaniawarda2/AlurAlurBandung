<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit908bc52a408c954b0621bd3cb07ac996
=======
class ComposerAutoloaderInit12c658e5fa8b1b634cfa98ddaeb5119d
>>>>>>> 850e6ff13eccd44dc07eb536096ca10074f9873f
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    /**
     * @return \Composer\Autoload\ClassLoader
     */
    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

        require __DIR__ . '/platform_check.php';

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit908bc52a408c954b0621bd3cb07ac996', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader(\dirname(\dirname(__FILE__)));
        spl_autoload_unregister(array('ComposerAutoloaderInit908bc52a408c954b0621bd3cb07ac996', 'loadClassLoader'));

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
        if ($useStaticLoader) {
            require __DIR__ . '/autoload_static.php';

            call_user_func(\Composer\Autoload\ComposerStaticInit908bc52a408c954b0621bd3cb07ac996::getInitializer($loader));
        } else {
            $map = require __DIR__ . '/autoload_namespaces.php';
            foreach ($map as $namespace => $path) {
                $loader->set($namespace, $path);
            }

            $map = require __DIR__ . '/autoload_psr4.php';
            foreach ($map as $namespace => $path) {
                $loader->setPsr4($namespace, $path);
            }

            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->register(true);

        if ($useStaticLoader) {
            $includeFiles = Composer\Autoload\ComposerStaticInit908bc52a408c954b0621bd3cb07ac996::$files;
        } else {
            $includeFiles = require __DIR__ . '/autoload_files.php';
        }
        foreach ($includeFiles as $fileIdentifier => $file) {
            composerRequire908bc52a408c954b0621bd3cb07ac996($fileIdentifier, $file);
=======
        spl_autoload_register(array('ComposerAutoloaderInit12c658e5fa8b1b634cfa98ddaeb5119d', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader(\dirname(__DIR__));
        spl_autoload_unregister(array('ComposerAutoloaderInit12c658e5fa8b1b634cfa98ddaeb5119d', 'loadClassLoader'));

        require __DIR__ . '/autoload_static.php';
        call_user_func(\Composer\Autoload\ComposerStaticInit12c658e5fa8b1b634cfa98ddaeb5119d::getInitializer($loader));

        $loader->register(true);

        $includeFiles = \Composer\Autoload\ComposerStaticInit12c658e5fa8b1b634cfa98ddaeb5119d::$files;
        foreach ($includeFiles as $fileIdentifier => $file) {
            composerRequire12c658e5fa8b1b634cfa98ddaeb5119d($fileIdentifier, $file);
>>>>>>> 850e6ff13eccd44dc07eb536096ca10074f9873f
        }

        return $loader;
    }
}

<<<<<<< HEAD
function composerRequire908bc52a408c954b0621bd3cb07ac996($fileIdentifier, $file)
{
    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
        require $file;

        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;
=======
/**
 * @param string $fileIdentifier
 * @param string $file
 * @return void
 */
function composerRequire12c658e5fa8b1b634cfa98ddaeb5119d($fileIdentifier, $file)
{
    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;

        require $file;
>>>>>>> 850e6ff13eccd44dc07eb536096ca10074f9873f
    }
}
